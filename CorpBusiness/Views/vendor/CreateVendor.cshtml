@model CorpBusiness.Models.Vendor
@{
    ViewBag.Title = "CreateVendor";
    Layout = "~/Views/Shared/_VendorLayout_registration.cshtml";
}

<h2>Vendor</h2>
<script type="text/javascript" src="@Url.Content("http://maps.google.com/maps/api/js?sensor=false")"></script>
<script type="text/javascript" src="@Url.Content("http://www.openlayers.org/api/OpenLayers.js")"></script>
<script src="@Url.Content("http://code.jquery.com/jquery-1.9.1.js")" type="text/javascript"></script>
<script src="@Url.Content("http://code.jquery.com/ui/1.10.2/jquery-ui.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Lng_Lat.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>


<script src="../../Scripts/Lng_Lat.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/OpenLayers.js")" type="text/javascript"></script>
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.css" />
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="http://cdn.leafletjs.com/leaflet-0.5/leaflet.js"></script>

<!--<script type="text/javascript">

  function loc1() {
  alert("Hi error");
        var address = document.getElementById("Pin").value;
        if (address == "") {
          //  if ("geolocation" in navigator) {
                
         //   } 
        //    else {
         //       alert("I'm sorry, but geolocation services are not supported by your browser.");
           // }
            var geocoder = new google.maps.Geocoder();
            var address1 = "kolkata";
            geocoder.geocode({ 'address': address1 }, function (results, status) {

                if (status == google.maps.GeocoderStatus.OK) {
                    //navigator.geolocation.getCurrentPosition(function (position) {
                    var lat = position.coords.latitude;
                    var lon = position.coords.longitude;
                    if (lon == null) {
                        lon = 88.34579059999998;
                        lat = 22.5726611;
                    }


                    var zoom = 15;

                    var fromProjection = new OpenLayers.Projection("EPSG:4326");

                    var toProjection = new OpenLayers.Projection("EPSG:900913");

                    var position = new OpenLayers.LonLat(lon, lat).transform(fromProjection, toProjection);


                    map = new OpenLayers.Map("Map");
                    var mapnik = new OpenLayers.Layer.OSM();
                    map.addLayer(mapnik);
                    map.setCenter(position, zoom);
                    ////////////// Marker Add//////////////

                    var markers = new OpenLayers.Layer.Markers("Markers");
                    map.addLayer(markers);

                    markers.addMarker(new OpenLayers.Marker(position));
                }
            });

        }
    else {
        
            var geocoder = new google.maps.Geocoder();

            geocoder.geocode({ 'address': address }, function (results, status) {

                if (status == google.maps.GeocoderStatus.OK) {

                    var lat = results[0].geometry.location.lat();

                    var lon = results[0].geometry.location.lng();
                    document.getElementById("Longitude").value = lon;
                    document.getElementById("Latitude").value = lat;
                    var zoom = 15;

                    var fromProjection = new OpenLayers.Projection("EPSG:4326");

                    var toProjection = new OpenLayers.Projection("EPSG:900913");

                    var position = new OpenLayers.LonLat(lon, lat).transform(fromProjection, toProjection);


                    map = new OpenLayers.Map("Map");
                    var mapnik = new OpenLayers.Layer.OSM();
                    map.addLayer(mapnik);
                    map.setCenter(position, zoom);
                    ////////////// Marker Add//////////////
                    
                    var markers = new OpenLayers.Layer.Markers("Markers");
                    map.addLayer(markers);
                    markers.addMarker(new OpenLayers.Marker(position));
                    ///////////////////////////////////////////////
                    
                   
                }
            });
        }        
     
    }
</script>-->

<script type="text/javascript">
    var address, lat, lon;
    var map;
    function loc1() {       
        //  document.getElementById("map").innerHTML = "";
        address = document.getElementById("Pin").value
        //  alert(address);
        var geocoder = new google.maps.Geocoder();

        geocoder.geocode({ 'address': address }, function (results, status) {

            if (status == google.maps.GeocoderStatus.OK) {

                lat = results[0].geometry.location.lat();

                lon = results[0].geometry.location.lng();

                document.getElementById("Longitude").value = lon;
                document.getElementById("Latitude").value = lat;


                map = L.map('map_canvas').setView([lat, lon], 12, true);


               L.tileLayer('http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/997/256/{z}/{x}/{y}.png', {
                    maxZoom: 18,
                    attribution: 'Map'
                }).addTo(map);

                L.control.scale().addTo(map);

                L.marker([lat, lon]).addTo(map)
			.bindPopup(document.getElementById("Address1").value).openPopup();
                //"<b>Hello!</b><br />..."

                var popup = L.popup();
                function onMapClick(e) {
                    popup
				.setLatLng(e.latlng)
				.setContent("You clicked the map at " + e.latlng.toString())
				.openOn(map);

                    ///////////////////////////
                   L.marker(e.latlng).addTo(map)

                    document.getElementById("Longitude").value = e.latlng.lng.toString();
                    document.getElementById("Latitude").value = e.latlng.lat.toString();
                }

                map.on('click', onMapClick);

            }
        });



        //  map.on('click', onMapClick);
    }
    </script>

<script type="text/javascript">
    function GetCity(_stateId) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $('#ddlcity').html(procemessage).show();
        var url = "/Vendor/GetCityByStaeId1/";

        $.ajax({
            url: url,
            data: { stateid: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>Select City</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $('#ddlcity').html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>



 
@using (Html.BeginForm())
{
   
    @Html.ValidationSummary(true)
 

 <body onload='loc1()'>
    <fieldset>
        <legend>Vendor</legend>       


        <table width="100%"><tr><td>
        <table cellspacing="0" cellpadding="10" width="100%" style="vertical-align:middle;">
      <tr>
     <td align="left"  style="font-size:12px;">
     Business Titles :
     </td>
     <td>
      @Html.EditorFor(model => model.BusinessTitles)
            @Html.ValidationMessageFor(model => model.BusinessTitles)
     </td>
     </tr>
     <tr>
     <td>
     Company Name :
     </td>
     <td>
      @Html.EditorFor(model => model.CompanyName)
            @Html.ValidationMessageFor(model => model.CompanyName)
     </td>
     </tr>
     <tr>
     <td>
     Category :
     </td>
     <td>
     @Html.DropDownListFor(x => x.Catgry, Model.Manufacturers, "select")
      @*    @Html.DropDownList(model => model., ViewBag.CountriesList as IDictionary<string, IEnumerable<SelectListItem>>, "[Please select a country]")
     @Html.DropDownList("Categ")
     
      @Html.DropDownList("People", new SelectList(Model, "Id", "Name" ), "Please select a person")
       @Html.DropDownListFor(model => model.Catgry, new SelectList(ViewBag.CountriesList as IDictionary<string, IEnumerable<SelectListItem>>, "[Please select a country]")))
       @Html.DropDownListFor(model => model.Catgry, new SelectList(Enum.GetValues(typeof(CorpBusiness.Models.Category1))))*@
          @*@Html.DropDownListFor(model => model.Catg@ry,new SelectList( ViewBag.CountriesList as IDictionary<string, IEnumerable<SelectListItem>>, "[Please select a country]"))*@
       @Html.ValidationMessageFor(model => model.Catgry)
     </td>
     </tr>
     <tr>
     <td>
     Sub Category :
     </td>
     <td>
      @Html.DropDownListFor(model => model.SubCatgry, new SelectList(Enum.GetValues(typeof(CorpBusiness.Models.subCategory1))))
         @Html.ValidationMessageFor(model => model.SubCatgry)
     </td>
     </tr>
     <tr>
     <td>
     Email Id :
     </td>
     <td>
      @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
     </td>
     </tr>
     <tr>
     <td>
     Name :
     </td>
     <td>
      @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
     </td>
     </tr>
     <tr>
     <td>
     Address 1:
     </td>
     <td>
       @Html.EditorFor(model => model.Address1)
            @Html.ValidationMessageFor(model => model.Address1)
     </td>
     </tr>
     <tr>
     <td>
     Address 2:
     </td>
     <td>
       @Html.EditorFor(model => model.Address2)
            @Html.ValidationMessageFor(model => model.Address2)
     </td>
     </tr>
     <tr>
     <td>
    City :
     </td>
     <td>
      @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
     </td>
        
     </tr>    
     <tr>
     <td>
     Postal Zip :
     </td>
     <td>
   @*<input type="text" name="txtpin" />*@
      @Html.EditorFor(model => model.Pin)
      @Html.ValidationMessageFor(model => model.Pin)
     </td>
     <td>
<input type="button"  value="Update Map" onclick="javascript:return loc1()" /></td>
     
     </tr>
     <tr>
     <td>
     Longitude :
     </td>
     <td>
   @* <input type="text" id="txt_long" />*@
     @Html.EditorFor(model => model.Longitude)
     @Html.ValidationMessageFor(model => model.Longitude)
     </td>
     </tr>
     <tr>
     <td>
     Latitude :
     </td>
     <td>
     @*<input type="text" id="txt_lat" />*@
    @Html.EditorFor(model => model.Latitude)
    @Html.ValidationMessageFor(model => model.Latitude)
     </td>
     </tr> 
      <tr>
     <td>
   Country :
     </td>
     <td>
      @Html.DropDownListFor(m => m.StateModel[0].Id, new SelectList(Model.StateModel, "Id", "StateName"), new { @id = "ddlstate", @style = "width:150px;", @onchange = "javascript:GetCity(this.value);" })
            @Html.ValidationMessageFor(model => model.State)
     </td>
     </tr> 
      <tr>
     <td>
     State :
     </td>
     <td>
      <select id="ddlcity" name="ddlcity" style="width: 150px">
           </select>
     @* @Html.EditorFor(model => model.Country)
            @Html.ValidationMessageFor(model => model.Country)*@
     </td>
     </tr>
     <tr>
     <td>
     Phone :
     </td>
     <td>
       @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
     </td>
     </tr>
     <tr>
     <td align="center" colspan="2">
      <input type="submit" value="Create" />
     </td>
     </tr>
     </table>
     </td>
     <td align="right" style=" vertical-align:top;">
     
     <div id="map_canvas" style="height:400px; width:500px; border:1px solid black" >
    

    </div>
           </td>
     </tr>
     
     
     </table>

        @Html.HiddenFor(model => model.EMailUser)
    </fieldset>


<div>
   @* @Html.ActionLink("Back to List", "Index")*@
</div>
</body> 
    }